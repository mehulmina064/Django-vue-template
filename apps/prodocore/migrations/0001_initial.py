# Generated by Django 4.0.4 on 2022-05-12 09:30

import apps.prodocore.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.SlugField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('comment', models.TextField(blank=True, default='')),
                ('full_name', models.CharField(blank=True, default='', max_length=255)),
                ('properties', jsonfield.fields.JSONField(blank=True, default={}, verbose_name='properties')),
                ('django_auth_sync', models.BooleanField(blank=True, default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('django_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group', verbose_name='django group')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
            },
            bases=(apps.prodocore.models.GroupRelationsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GroupEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('codename', models.SlugField(blank=True, max_length=255, unique=True)),
            ],
            options={
                'ordering': ('label',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMemberRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('codename', models.SlugField(blank=True, max_length=255, unique=True)),
            ],
            options={
                'ordering': ('label',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('codename', models.SlugField(blank=True, max_length=255, unique=True)),
            ],
            options={
                'ordering': ('label',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('username', models.CharField(blank=True, default='', max_length=255)),
                ('email', models.EmailField(blank=True, default='', max_length=255)),
                ('django_auth_sync', models.BooleanField(blank=True, default=True, verbose_name='django auth sync')),
                ('django_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='django user')),
            ],
            options={
                'ordering': ('last_name', 'first_name'),
                'abstract': False,
            },
            bases=(apps.prodocore.models.MemberRelationsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expiration_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_membership', to='prodocore.group', verbose_name='group')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_membership', to='prodocore.member', verbose_name='member')),
                ('roles', models.ManyToManyField(blank=True, to='prodocore.groupmemberrole', verbose_name='roles')),
            ],
            options={
                'ordering': ('group', 'member'),
                'abstract': False,
                'unique_together': {('group', 'member')},
            },
        ),
        migrations.AddField(
            model_name='group',
            name='group_entities',
            field=models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_set', to='prodocore.groupentity', verbose_name='group entities'),
        ),
        migrations.AddField(
            model_name='group',
            name='group_members',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_set', through='prodocore.GroupMember', to='prodocore.member', verbose_name='group members'),
        ),
        migrations.AddField(
            model_name='group',
            name='group_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_set', to='prodocore.grouptype', verbose_name='group type'),
        ),
        migrations.AddField(
            model_name='group',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_%(app_label)s_%(class)s_set', to='prodocore.group', verbose_name='parent'),
        ),
    ]
