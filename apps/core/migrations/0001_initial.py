# Generated by Django 4.0.4 on 2022-05-19 09:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjects', models.CharField(blank=True, max_length=255, null=True)),
                ('communication_medium', models.CharField(blank=True, max_length=255, null=True)),
                ('sender', models.CharField(blank=True, max_length=255, null=True)),
                ('recipients', models.CharField(blank=True, max_length=255, null=True)),
                ('cc', models.CharField(blank=True, max_length=255, null=True)),
                ('bcc', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_status', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('text_content', models.TextField(blank=True, null=True)),
                ('communication_type', models.CharField(blank=True, max_length=255, null=True)),
                ('comment_type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('sent_or_received', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('communication_date', models.DateTimeField(blank=True, null=True)),
                ('read_receipt', models.CharField(blank=True, max_length=255, null=True)),
                ('sender_full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('read_by_recipient', models.CharField(blank=True, max_length=255, null=True)),
                ('read_by_recipient_on', models.DateTimeField(blank=True, null=True)),
                ('reference_name', models.CharField(blank=True, max_length=255, null=True)),
                ('reference_owner', models.CharField(blank=True, max_length=255, null=True)),
                ('unread_notification_sent', models.BooleanField(default=False)),
                ('seen', models.BooleanField(default=False)),
                ('_User_tags', models.CharField(blank=True, max_length=255, null=True)),
                ('email_status', models.CharField(blank=True, max_length=255, null=True)),
                ('has_attachment', models.BooleanField(default=False)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('feedback_request', models.BooleanField(default=False)),
                ('timeline_links', models.CharField(blank=True, max_length=255, null=True)),
                ('imap_folder', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'communication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Block_Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'Block_Module',
            },
        ),
        migrations.CreateModel(
            name='Data_Import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(blank=True, choices=[('csv', 'CSV'), ('excel', 'EXCEL')], default='csv', max_length=150, null=True)),
                ('import_type', models.CharField(blank=True, choices=[('Insert New Records', 'Insert New Records'), ('Update Existing Records', 'Update Existing Records')], default='Insert New Records', max_length=150, null=True)),
                ('import_file', models.CharField(blank=True, max_length=150, null=True)),
                ('template_options', models.TextField(blank=True, null=True)),
                ('Pending', models.CharField(blank=True, choices=[('Success', 'Success'), ('Partial Success', 'Partial Success'), ('Error', 'Error')], default='Success', max_length=150, null=True)),
                ('template_warnings', models.TextField(blank=True, null=True)),
                ('submit_after_import', models.BooleanField(default=False)),
                ('mute_emails', models.BooleanField(default=True)),
                ('show_failed_logs', models.BooleanField(default=False)),
                ('google_sheets_url', models.URLField(blank=True, null=True)),
                ('refresh_google_sheet', models.CharField(blank=True, max_length=150, null=True)),
                ('payload_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'data_import',
            },
        ),
        migrations.CreateModel(
            name='DefaultValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defkey', models.CharField(blank=True, max_length=150, null=True)),
                ('defvalue', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'Default Values',
                'db_table': 'defaultvalue',
            },
        ),
        migrations.CreateModel(
            name='Docfield',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=150, null=True)),
                ('fieldtype', models.CharField(blank=True, choices=[('Currency', ''), ('Section Break', ''), ('Code', ''), ('Table MultiSelect', ''), ('Select', ''), ('Icon', ''), ('Percent', ''), ('Check', ''), ('Password', ''), ('Dynamic Link', ''), ('Time', ''), ('Float', ''), ('Data', ''), ('Int', ''), ('Markdown Editor', ''), ('Rating', ''), ('Read Only', ''), ('Geolocation', ''), ('Date', ''), ('Heading', ''), ('Button', ''), ('Attach', ''), ('Small Text', ''), ('Text', ''), ('Duration', ''), ('Signature', ''), ('Fold', ''), ('HTML', ''), ('Tab Break', ''), ('JSON', ''), ('Link', ''), ('Barcode', ''), ('Phone', ''), ('Column Break', ''), ('Image', ''), ('Attach Image', ''), ('Color', ''), ('Long Text', ''), ('HTML Editor', ''), ('Table', ''), ('Autocomplete', ''), ('Datetime', ''), ('Text Editor', '')], max_length=150, null=True)),
                ('fieldname', models.CharField(blank=True, max_length=150, null=True)),
                ('reqd', models.BooleanField(default=False)),
                ('precision', models.CharField(blank=True, choices=[('1', ''), ('7', ''), ('3', ''), ('5', ''), ('6', ''), ('9', ''), ('4', ''), ('2', ''), ('8', '')], max_length=150, null=True)),
                ('search_index', models.BooleanField(default=False)),
                ('in_list_view', models.BooleanField(default=False)),
                ('in_standard_filter', models.BooleanField(default=False)),
                ('in_global_search', models.BooleanField(default=False)),
                ('in_preview', models.BooleanField(default=False)),
                ('allow_in_quick_entry', models.BooleanField(default=False)),
                ('bold', models.BooleanField(default=False)),
                ('translatable', models.BooleanField(default=False)),
                ('collapsible', models.BooleanField(default=False)),
                ('collapsible_depends_on', models.CharField(blank=True, max_length=150, null=True)),
                ('options', models.CharField(blank=True, max_length=150, null=True)),
                ('default', models.CharField(blank=True, max_length=150, null=True)),
                ('fetch_from', models.CharField(blank=True, max_length=150, null=True)),
                ('fetch_if_empty', models.BooleanField(default=False)),
                ('depends_on', models.CharField(blank=True, max_length=150, null=True)),
                ('hidden', models.BooleanField(default=False)),
                ('print_width', models.CharField(blank=True, max_length=150, null=True)),
                ('width', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('oldfieldname', models.CharField(blank=True, max_length=150, null=True)),
                ('oldfieldtype', models.CharField(blank=True, max_length=150, null=True)),
                ('mandatory_depends_on', models.CharField(blank=True, max_length=150, null=True)),
                ('read_only_depends_on', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'docfield',
                'db_table': 'docfield',
            },
        ),
        migrations.CreateModel(
            name='Doctype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(blank=True, max_length=150, null=True)),
                ('is_submittable', models.BooleanField(default=False)),
                ('istable', models.BooleanField(default=False)),
                ('issingle', models.BooleanField(default=False)),
                ('editable_grid', models.BooleanField(default=False)),
                ('quick_entry', models.BooleanField(default=False)),
                ('track_changes', models.BooleanField(default=False)),
                ('track_seen', models.BooleanField(default=False)),
                ('track_views', models.BooleanField(default=False)),
                ('custom', models.BooleanField(default=False)),
                ('beta', models.BooleanField(default=False)),
                ('fields', models.CharField(blank=True, max_length=255, null=True)),
                ('autoname', models.CharField(blank=True, max_length=255, null=True)),
                ('name_case', models.CharField(blank=True, choices=[('UPPER CASE', 'UPPER CASE'), ('Title Case', 'Title Case')], max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('image_field', models.ImageField(blank=True, null=True, upload_to='doctype_images')),
                ('timeline_field', models.CharField(blank=True, max_length=255, null=True)),
                ('max_attachments', models.IntegerField(blank=True, null=True)),
                ('hide_toolbar', models.BooleanField(default=False)),
                ('allow_copy', models.BooleanField(default=False)),
                ('allow_rename', models.BooleanField(default=False)),
                ('allow_import', models.BooleanField(default=False)),
                ('allow_events_in_timeline', models.BooleanField(default=False)),
                ('allow_auto_repeat', models.BooleanField(default=False)),
                ('title_field', models.CharField(blank=True, max_length=255, null=True)),
                ('search_fields', models.CharField(blank=True, max_length=255, null=True)),
                ('default_print_format', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_field', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_order', models.CharField(blank=True, choices=[('DESC', 'DESC'), ('ASC', 'ASC')], max_length=255, null=True)),
                ('document_type', models.CharField(blank=True, choices=[('Other', 'Other'), ('Setup', 'Setup'), ('System', 'System'), ('Document', 'Document')], max_length=255, null=True)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('show_preview_popup', models.BooleanField(default=False)),
                ('show_name_in_global_search', models.BooleanField(default=False)),
                ('in_create', models.BooleanField(default=False)),
                ('has_web_view', models.BooleanField(default=False)),
                ('allow_guest_to_view', models.BooleanField(default=False)),
                ('engine', models.CharField(blank=True, choices=[('InnoDB', 'InnoDB'), ('MyISAM', 'MyISAM')], max_length=255, null=True)),
                ('is_tree', models.BooleanField(default=False)),
                ('nsm_parent_field', models.CharField(blank=True, max_length=255, null=True)),
                ('sender_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email_append_to', models.BooleanField(default=False)),
                ('index_web_pages_for_search', models.BooleanField(default=False)),
                ('is_virtual', models.BooleanField(default=False)),
                ('website_search_field', models.CharField(blank=True, max_length=255, null=True)),
                ('migration_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('show_title_field_in_link', models.BooleanField(default=False)),
                ('documentation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
            options={
                'verbose_name_plural': 'doctypes',
                'db_table': 'doctype',
            },
        ),
        migrations.CreateModel(
            name='Doctype_Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('group', models.CharField(max_length=100)),
                ('hidden', models.BooleanField(default=False)),
                ('custom', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Document Type Actions',
                'db_table': 'doctype_action',
            },
        ),
        migrations.CreateModel(
            name='Doctype_Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_fieldname', models.CharField(max_length=100)),
                ('group', models.CharField(max_length=100)),
                ('hidden', models.BooleanField(default=False)),
                ('custom', models.BooleanField(default=False)),
                ('is_child_table', models.BooleanField(default=False)),
                ('table_fieldname', models.CharField(max_length=100)),
                ('link_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_doctype', to='core.doctype')),
                ('parent_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_doctype', to='core.doctype')),
            ],
            options={
                'verbose_name_plural': 'doctype_links',
                'ordering': ['link_fieldname'],
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Domains',
                'db_table': 'domain',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_doctype', models.CharField(choices=[('Document', 'Document'), ('Other', 'Other'), ('Setup', 'Setup'), ('System', 'System')], max_length=100)),
                ('reference_name', models.CharField(max_length=100)),
                ('ip_address', models.CharField(max_length=100)),
                ('like', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Feedbacks',
                'db_table': 'feedback',
            },
        ),
        migrations.CreateModel(
            name='Install_Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('git_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('app_name', models.CharField(blank=True, max_length=100, null=True)),
                ('app_version', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Install Applications',
                'db_table': 'install_application',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(max_length=10)),
                ('language_name', models.CharField(max_length=50)),
                ('flag', models.CharField(max_length=50)),
                ('enabled', models.BooleanField(default=True)),
                ('based_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.language')),
            ],
        ),
        migrations.CreateModel(
            name='Log_Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_to_notify', models.CharField(blank=True, max_length=100, null=True)),
                ('clear_error_log_after', models.IntegerField(default=90)),
                ('clear_Activity_Log_after', models.IntegerField(default=90)),
                ('clear_email_queue_after', models.IntegerField(default=30)),
            ],
            options={
                'verbose_name_plural': 'Log Settings',
                'db_table': 'log_settings',
            },
        ),
        migrations.CreateModel(
            name='Module_Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_profile_name', models.CharField(max_length=100)),
                ('module_html', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Module Profiles',
                'db_table': 'module_profile',
            },
        ),
        migrations.CreateModel(
            name='Navbar_Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_label', models.CharField(max_length=100)),
                ('item_type', models.CharField(choices=[('Separator', 'Separator'), ('Route', 'Route'), ('Action', 'Action')], max_length=100)),
                ('hidden', models.BooleanField(default=False)),
                ('is_standard', models.BooleanField(default=False)),
                ('route', models.CharField(blank=True, max_length=100)),
                ('action', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Navbar Items',
                'db_table': 'navbar_item',
            },
        ),
        migrations.CreateModel(
            name='Navbar_Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_logo', models.ImageField(blank=True, null=True, upload_to='app_logo/')),
                ('logo_width', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Navbar Settings',
                'db_table': 'navbar_settings',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('readme', models.CharField(blank=True, max_length=255)),
                ('package_name', models.CharField(blank=True, max_length=255)),
                ('license_type', models.CharField(choices=[('GNU General Public License', 'GNU General Public License'), ('Public License', 'Public License'), ('GNU Affero General', 'GNU Affero General'), ('MIT License', 'MIT License')], max_length=255)),
                ('license', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Packages',
                'db_table': 'package',
            },
        ),
        migrations.CreateModel(
            name='Report_Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fieldname', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('fieldtype', models.CharField(choices=[('OneToManyRelation', 'OneToManyRelation'), ('ManyToOneRelation', 'ManyToOneRelation'), ('ManyToManyField', 'ManyToManyField'), ('Float', 'Float'), ('OneToOneRelation', 'OneToOneRelation'), ('IntigerField', 'IntigerField'), ('Currency', 'Currency'), ('Date', 'Date'), ('charfield', 'charfield'), ('boolean', 'boolean'), ('ForeignKey', 'ForeignKey'), ('DateField', 'DateField')], max_length=255)),
                ('options', models.CharField(max_length=255)),
                ('width', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Report Column',
                'verbose_name_plural': 'Report Columns',
                'db_table': 'report_column',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Report_Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fieldname', models.CharField(blank=True, max_length=100, null=True)),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
                ('fieldtype', models.CharField(blank=True, choices=[('csv', 'CSV'), ('excel', 'EXCEL')], max_length=100, null=True)),
                ('mandatory', models.BooleanField(default=False)),
                ('options', models.TextField(blank=True, null=True)),
                ('wildcard_filter', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Report Filters',
                'ordering': ['fieldname'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=100, unique=True)),
                ('disabled', models.BooleanField(default=False)),
                ('desk_access', models.BooleanField(default=True)),
                ('two_factor_auth', models.BooleanField(default=False)),
                ('home_page', models.CharField(default='home', max_length=100)),
                ('search_bar', models.BooleanField(default=True)),
                ('list_sidebar', models.BooleanField(default=True)),
                ('bulk_actions', models.BooleanField(default=True)),
                ('form_sidebar', models.BooleanField(default=True)),
                ('timeline', models.BooleanField(default=True)),
                ('dashboard', models.BooleanField(default=True)),
                ('view_switcher', models.BooleanField(default=True)),
                ('notifications', models.BooleanField(default=True)),
                ('is_custom', models.BooleanField(default=False)),
                ('restrict_to_domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.domain')),
            ],
            options={
                'verbose_name_plural': 'Roles',
                'ordering': ['role_name'],
            },
        ),
        migrations.CreateModel(
            name='Role_Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_profile', models.CharField(max_length=100, unique=True)),
                ('roles_html', models.TextField()),
                ('role_profile_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Scheduled_Job_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Complete', 'Complete'), ('Scheduled', 'Scheduled'), ('Failed', 'Failed')], max_length=20)),
                ('details', models.CharField(max_length=200)),
                ('scheduled_job_type', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Scheduled Job Log',
                'db_table': 'scheduled_job_log',
            },
        ),
        migrations.CreateModel(
            name='Scheduled_Job_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('csv', 'CSV'), ('excel', 'EXCEL')], max_length=100)),
                ('stopped', models.BooleanField(default=False)),
                ('create_log', models.BooleanField(default=False)),
                ('last_execution', models.DateTimeField(blank=True, null=True)),
                ('cron_format', models.CharField(blank=True, max_length=100, null=True)),
                ('frequency', models.CharField(choices=[('Weekly Long', 'Weekly Long'), ('All', 'All'), ('Weekly', 'Weekly'), ('Hourly', 'Hourly'), ('Daily', 'Daily'), ('Annual', 'Annual'), ('Cron', 'Cron'), ('Daily Long', 'Daily Long'), ('Hourly Long', 'Hourly Long'), ('Monthly Long', 'Monthly Long'), ('Monthly', 'Monthly'), ('Yearly', 'Yearly')], max_length=100)),
                ('server_script', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Scheduled Job Types',
                'ordering': ['method'],
            },
        ),
        migrations.CreateModel(
            name='Sms_Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.CharField(blank=True, max_length=100, null=True)),
                ('header', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Sms_Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_gateway_url', models.CharField(blank=True, max_length=100, null=True)),
                ('message_parameter', models.CharField(blank=True, max_length=100, null=True)),
                ('receiver_parameter', models.CharField(blank=True, max_length=100, null=True)),
                ('use_post', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.CharField(max_length=100)),
                ('test2', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_index', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_doctype', models.CharField(blank=True, max_length=100, null=True)),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('checksum_version', models.CharField(blank=True, max_length=100, null=True)),
                ('previous_hash', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_hash', models.CharField(blank=True, max_length=100, null=True)),
                ('chaining_hash', models.CharField(blank=True, max_length=100, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('amended_from', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_id', models.CharField(max_length=100)),
                ('awaiting_password', models.BooleanField(default=False)),
                ('enable_outgoing', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Usergroup_members', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserSelect_Document_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_standard', models.BooleanField(default=False)),
                ('Userid_field', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('Usertype_modules', models.CharField(blank=True, max_length=400)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('apply_Userpermission_on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role')),
                ('select_doctypes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userselect_document_type')),
            ],
            options={
                'verbose_name': 'User Type',
                'verbose_name_plural': 'User Type',
                'db_table': 'Usertype',
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docname', models.CharField(max_length=100)),
                ('data', models.CharField(max_length=100)),
                ('table_html', models.CharField(max_length=100)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created', to=settings.AUTH_USER_MODEL)),
                ('ref_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Versions',
            },
        ),
        migrations.CreateModel(
            name='UserType_Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Usertype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.usertype')),
            ],
        ),
        migrations.CreateModel(
            name='UserSocial_Login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255)),
                ('userid', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Social Login',
            },
        ),
        migrations.CreateModel(
            name='UserGroup_Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.usergroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDocument_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField()),
                ('write', models.BooleanField()),
                ('create', models.BooleanField()),
                ('is_custom', models.BooleanField()),
                ('submit', models.BooleanField()),
                ('cancel', models.BooleanField()),
                ('amend', models.BooleanField()),
                ('delete', models.BooleanField()),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('full_name', models.CharField(max_length=100)),
                ('send_welcome_email', models.BooleanField(default=False)),
                ('unsubscribed', models.BooleanField(default=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('time_zone', models.CharField(max_length=100)),
                ('Userimage', models.ImageField(blank=True, upload_to='Userimages')),
                ('roles_html', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=200)),
                ('mobile_no', models.CharField(max_length=200)),
                ('birth_date', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='Userimages')),
                ('interest', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.CharField(blank=True, max_length=100, null=True)),
                ('mute_sounds', models.BooleanField(default=False)),
                ('new_password', models.CharField(blank=True, max_length=100, null=True)),
                ('logout_all_sessions', models.BooleanField(default=True)),
                ('reset_password_key', models.CharField(blank=True, max_length=100, null=True)),
                ('last_password_reset_date', models.DateTimeField(blank=True, null=True)),
                ('redirect_url', models.CharField(blank=True, max_length=100, null=True)),
                ('document_follow_notify', models.BooleanField(default=True)),
                ('document_follow_frequency', models.CharField(blank=True, choices=[('Daily', 'Daily'), ('All', 'All'), ('Hourly', 'Hourly'), ('Weekly', 'Weekly')], max_length=100, null=True)),
                ('thread_notify', models.BooleanField(default=True)),
                ('send_me_a_copy', models.BooleanField(default=False)),
                ('allowed_in_mentions', models.BooleanField(default=True)),
                ('email_signature', models.CharField(blank=True, max_length=100, null=True)),
                ('modules_html', models.CharField(blank=True, max_length=100, null=True)),
                ('home_settings', models.CharField(blank=True, max_length=100, null=True)),
                ('simultaneous_sessions', models.IntegerField(blank=True, null=True)),
                ('login_after', models.IntegerField(blank=True, null=True)),
                ('login_before', models.IntegerField(blank=True, null=True)),
                ('restrict_ip', models.CharField(blank=True, max_length=100, null=True)),
                ('bypass_restrict_ip_check_if_2fa_enabled', models.BooleanField(default=False)),
                ('last_login', models.CharField(blank=True, max_length=100, null=True)),
                ('last_ip', models.CharField(blank=True, max_length=100, null=True)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('last_known_versions', models.CharField(blank=True, max_length=100, null=True)),
                ('api_key', models.CharField(blank=True, max_length=100, null=True)),
                ('api_secret', models.CharField(blank=True, max_length=100, null=True)),
                ('desk_theme', models.CharField(blank=True, choices=[('Light', 'Light'), ('Dark', 'Dark'), ('Automatic', 'Automatic')], max_length=100, null=True)),
                ('follow_created_documents', models.BooleanField(default=True)),
                ('follow_commented_documents', models.BooleanField(default=True)),
                ('follow_liked_documents', models.BooleanField(default=True)),
                ('follow_shared_documents', models.BooleanField(default=True)),
                ('follow_assigned_documents', models.BooleanField(default=True)),
                ('Usertype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.usertype')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.language')),
                ('role_profile_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role_profile')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.CharField(max_length=100)),
                ('contributed', models.BooleanField(default=False)),
                ('contribution_status', models.CharField(choices=[('pending', 'pending'), ('rejected', 'rejected'), ('verified', 'verified')], max_length=100)),
                ('contribution_docname', models.CharField(max_length=100)),
                ('source_text', models.CharField(max_length=100)),
                ('translated_text', models.CharField(max_length=100)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.language')),
            ],
        ),
        migrations.CreateModel(
            name='System_Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_zone', models.CharField(max_length=100)),
                ('setup_complete', models.BooleanField(default=False)),
                ('date_format', models.CharField(choices=[('mdy', 'mm-dd-yyyy'), ('ymd', 'yyyy-mm-dd'), ('dmy', 'dd/mm/yyyy'), ('mdy', 'mm/dd/yyyy'), ('dmy', 'dd.mm.yyyy'), ('dmy', 'dd-mm-yyyy')], max_length=100)),
                ('time_format', models.CharField(choices=[('24', 'HH:mm:ss'), ('12', 'HH:mm')], max_length=100)),
                ('number_format', models.CharField(max_length=100)),
                ('float_precision', models.CharField(choices=[('7', ''), ('3', ''), ('5', ''), ('6', ''), ('9', ''), ('4', ''), ('2', ''), ('8', '')], max_length=100)),
                ('currency_precision', models.CharField(choices=[('1', ''), ('7', ''), ('3', ''), ('5', ''), ('6', ''), ('0', ''), ('9', ''), ('4', ''), ('2', ''), ('8', '')], max_length=100)),
                ('backup_limit', models.IntegerField(default=3)),
                ('enable_scheduler', models.BooleanField(default=False)),
                ('apply_strict_User_permissions', models.BooleanField(default=False)),
                ('session_expiry', models.CharField(max_length=100)),
                ('session_expiry_mobile', models.CharField(max_length=100)),
                ('deny_multiple_sessions', models.BooleanField(default=False)),
                ('allow_login_using_mobile_number', models.BooleanField(default=False)),
                ('allow_login_using_User_name', models.BooleanField(default=False)),
                ('allow_error_traceback', models.BooleanField(default=True)),
                ('force_User_to_reset_password', models.IntegerField(default=0)),
                ('enable_password_policy', models.BooleanField(default=False)),
                ('minimum_password_score', models.CharField(max_length=100)),
                ('allow_consecutive_login_attempts', models.IntegerField(default=0)),
                ('allow_login_after_fail', models.IntegerField(default=0)),
                ('enable_two_factor_auth', models.BooleanField(default=False)),
                ('bypass_2fa_for_retricted_ip_users', models.BooleanField(default=False)),
                ('bypass_restrict_ip_check_if_2fa_enabled', models.BooleanField(default=False)),
                ('two_factor_method', models.CharField(max_length=100)),
                ('lifespan_qrcode_image', models.IntegerField(default=0)),
                ('otp_issuer_name', models.CharField(max_length=100)),
                ('email_footer_address', models.CharField(max_length=100)),
                ('disable_standard_email_footer', models.BooleanField(default=False)),
                ('hide_footer_in_auto_email_reports', models.BooleanField(default=False)),
                ('allow_guests_to_upload_files', models.BooleanField(default=False)),
                ('dormant_days', models.IntegerField(default=0)),
                ('password_reset_limit', models.IntegerField(default=0)),
                ('logout_on_password_reset', models.BooleanField(default=True)),
                ('enable_onboarding', models.BooleanField(default=False)),
                ('attach_view_link', models.BooleanField(default=True)),
                ('prepared_report_expiry_period', models.IntegerField(default=30)),
                ('enable_prepared_report_auto_deletion', models.BooleanField(default=False)),
                ('app_name', models.CharField(max_length=100)),
                ('strip_exif_metadata_from_uploaded_images', models.BooleanField(default=True)),
                ('encrypt_backup', models.BooleanField(default=False)),
                ('disable_system_update_notification', models.BooleanField(default=False)),
                ('first_day_of_the_week', models.CharField(choices=[('Sunday', 'Sunday'), ('Thursday', 'Thursday'), ('Monday', 'Monday'), ('Wednesday', 'Wednesday'), ('Tuesday', 'Tuesday'), ('Saturday', 'Saturday'), ('Friday', 'Friday')], default='Sunday', max_length=100)),
                ('max_auto_email_report_per_user', models.IntegerField(default=20)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.language')),
            ],
        ),
        migrations.CreateModel(
            name='Success_Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_success_message', models.CharField(max_length=255, null=True)),
                ('message', models.CharField(max_length=255, null=True)),
                ('next_actions_html', models.CharField(max_length=255, null=True)),
                ('next_actions', models.CharField(max_length=255, null=True)),
                ('action_timeout', models.IntegerField(null=True)),
                ('ref_doctype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
            options={
                'verbose_name': 'Success_Action',
                'verbose_name_plural': 'Success_Action',
                'db_table': 'success_action',
            },
        ),
        migrations.CreateModel(
            name='Session_Default',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('field_value', models.CharField(max_length=100)),
                ('ref_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
            options={
                'verbose_name': 'Session Default',
                'verbose_name_plural': 'Session Default',
                'db_table': 'session_default',
                'ordering': ['field_name'],
            },
        ),
        migrations.CreateModel(
            name='Server_Script',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('script_type', models.CharField(choices=[('API', 'API'), ('Scheduler Event', 'Scheduler Event'), ('DocType Event', 'DocType Event'), ('Permission Query', 'Permission Query')], max_length=100)),
                ('script', models.TextField()),
                ('doctype_event', models.CharField(choices=[('After Delete', 'After Delete'), ('After Save', 'After Save'), ('Before Cancel', 'Before Cancel'), ('Before Save', 'After Save'), ('Before Delete', 'Before Delete'), ('On Payment Authorization', 'On Payment Authorization'), ('After Insert', 'After Insert'), ('After Cancel', 'After Cancel'), ('Before Insert', 'Before Insert'), ('Before Submit', 'Before Submit'), ('Before Save', 'Before Save'), ('Before Validate', 'Before Validate'), ('After Submit', 'After Submit')], max_length=100)),
                ('api_method', models.CharField(max_length=100)),
                ('allow_guest', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(default=False)),
                ('event_frequency', models.CharField(choices=[('Weekly Long', 'Weekly Long'), ('All', 'All'), ('Weekly', 'Weekly'), ('Hourly', 'Hourly'), ('Daily', 'Daily'), ('Annual', 'Annual'), ('Cron', 'Cron'), ('Daily Long', 'Daily Long'), ('Hourly Long', 'Hourly Long'), ('Monthly Long', 'Monthly Long'), ('Monthly', 'Monthly'), ('Yearly', 'Yearly')], max_length=100)),
                ('reference_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_name', models.CharField(max_length=100)),
                ('reference_report', models.CharField(blank=True, max_length=100)),
                ('is_standard', models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], max_length=100)),
                ('add_total_row', models.BooleanField(default=False)),
                ('report_type', models.CharField(choices=[('Script Report', 'Script Report'), ('Report Builder', 'Report Builder'), ('Custom Report', 'Custom Report'), ('Query Report', 'Query Report')], max_length=100)),
                ('disabled', models.BooleanField(default=False)),
                ('query', models.CharField(blank=True, max_length=100)),
                ('javascript', models.CharField(blank=True, max_length=100)),
                ('json', models.CharField(blank=True, max_length=100)),
                ('disable_prepared_report', models.BooleanField(default=False)),
                ('prepared_report', models.BooleanField(default=False)),
                ('report_script', models.CharField(blank=True, max_length=100)),
                ('ref_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
                ('roles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role')),
            ],
        ),
        migrations.CreateModel(
            name='Prepared_Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Queued', 'Queued'), ('Completed', 'Completed'), ('Error', 'Error')], max_length=100)),
                ('report_start_time', models.DateTimeField(auto_now_add=True)),
                ('report_end_time', models.DateTimeField(auto_now_add=True)),
                ('error_message', models.TextField(blank=True)),
                ('filters', models.TextField(blank=True)),
                ('filter_values', models.CharField(blank=True, max_length=100)),
                ('ref_report_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.report')),
            ],
        ),
        migrations.CreateModel(
            name='Payment_Gateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gateway', models.CharField(max_length=100, unique=True)),
                ('gateway_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gateway_settings', to='core.doctype')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_page', models.CharField(blank=True, max_length=255, null=True)),
                ('page_name', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('standard', models.CharField(blank=True, choices=[('No', 'No'), ('Yes', 'Yes')], max_length=255, null=True)),
                ('restrict_to_domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.domain')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'db_table': 'pages',
            },
        ),
        migrations.CreateModel(
            name='Module_Def',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=100)),
                ('app_name', models.CharField(max_length=100)),
                ('custom', models.CharField(max_length=100)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.package')),
                ('restrict_to_domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.domain')),
            ],
            options={
                'verbose_name_plural': 'Module Def',
                'db_table': 'module_def',
            },
        ),
        migrations.CreateModel(
            name='Log_Setting_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.log_settings')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Log Settings Users',
                'db_table': 'log_settings_user',
            },
        ),
        migrations.CreateModel(
            name='Has_Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_role', models.BooleanField(default=False)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Has_Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.domain')),
            ],
            options={
                'verbose_name_plural': 'Has Domains',
                'db_table': 'has_domain',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100)),
                ('preview', models.CharField(max_length=100)),
                ('preview_html', models.CharField(max_length=100)),
                ('is_home_folder', models.BooleanField(default=False)),
                ('is_attachments_folder', models.BooleanField(default=False)),
                ('file_size', models.IntegerField(default=0)),
                ('file_url', models.CharField(max_length=100)),
                ('thumbnail_url', models.CharField(max_length=100)),
                ('is_folder', models.BooleanField(default=False)),
                ('attached_to_name', models.CharField(max_length=100)),
                ('attached_to_field', models.CharField(max_length=100)),
                ('old_parent', models.CharField(max_length=100)),
                ('content_hash', models.CharField(max_length=100)),
                ('uploaded_to_dropbox', models.BooleanField(default=False)),
                ('uploaded_to_google_drive', models.BooleanField(default=False)),
                ('attached_to_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
        ),
        migrations.CreateModel(
            name='Error_Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view', models.CharField(max_length=400)),
                ('seen', models.BooleanField(default=False)),
                ('evalue', models.CharField(max_length=100)),
                ('timestamp', models.DateField()),
                ('relapses', models.IntegerField()),
                ('etype', models.CharField(max_length=100)),
                ('traceback', models.CharField(max_length=100)),
                ('pyver', models.CharField(max_length=100)),
                ('exception', models.CharField(max_length=100)),
                ('locals', models.CharField(max_length=100)),
                ('frames', models.CharField(max_length=100)),
                ('parent_error_snapshot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.error_snapshot')),
            ],
            options={
                'verbose_name_plural': 'Error Snapshots',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Error_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seen', models.BooleanField(default=False)),
                ('method', models.CharField(max_length=100)),
                ('error', models.CharField(max_length=100)),
                ('reference_name', models.CharField(max_length=100)),
                ('reference_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
            options={
                'verbose_name_plural': 'Error Log',
                'db_table': 'error_log',
            },
        ),
        migrations.CreateModel(
            name='Dynamic_Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_title', models.CharField(max_length=100)),
                ('link_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
                ('link_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype_link')),
            ],
            options={
                'verbose_name_plural': 'Dynamic Links',
                'db_table': 'dynamic_link',
            },
        ),
        migrations.CreateModel(
            name='Domain_Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domains_html', models.CharField(max_length=100)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.domain')),
            ],
            options={
                'verbose_name_plural': 'Domain Settings',
                'db_table': 'domain_settings',
            },
        ),
        migrations.CreateModel(
            name='Doctype_State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('color', models.CharField(choices=[('2', 'Cyan'), ('7', 'Pink'), ('5', 'Light Blue'), ('3', 'Gray'), ('8', 'Purple'), ('6', 'Orange'), ('10', 'Yellow'), ('1', 'Blue'), ('9', 'Red'), ('4', 'Green')], max_length=100)),
                ('custom', models.BooleanField(default=False)),
                ('doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
            options={
                'verbose_name_plural': 'Document Type States',
            },
        ),
        migrations.CreateModel(
            name='Docshare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_name', models.CharField(blank=True, max_length=150, null=True)),
                ('read', models.BooleanField(default=False)),
                ('write', models.BooleanField(default=False)),
                ('share', models.BooleanField(default=False)),
                ('everyone', models.BooleanField(default=False)),
                ('notify_by_email', models.BooleanField(default=False)),
                ('submit', models.BooleanField(default=False)),
                ('share_doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Shared Documents',
                'db_table': 'docshare',
            },
        ),
        migrations.CreateModel(
            name='Deleted_Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_name', models.CharField(blank=True, max_length=150, null=True)),
                ('restored', models.BooleanField(default=False)),
                ('new_name', models.CharField(blank=True, max_length=150, null=True)),
                ('data', models.CharField(blank=True, max_length=150, null=True)),
                ('deleted_doctype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
            options={
                'verbose_name_plural': 'Deleted Documents',
                'db_table': 'deleted_document',
            },
        ),
        migrations.CreateModel(
            name='Data_Import_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docname', models.CharField(blank=True, max_length=150, null=True)),
                ('doc_type', models.CharField(blank=True, choices=[('csv', 'CSV'), ('excel', 'EXCEL')], max_length=150, null=True)),
                ('exception', models.CharField(blank=True, max_length=150, null=True)),
                ('success', models.BooleanField(default=False)),
                ('log_index', models.IntegerField(default=0)),
                ('messages', models.CharField(blank=True, max_length=150, null=True)),
                ('data_import', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.data_import')),
            ],
            options={
                'db_table': 'data_import_log',
            },
        ),
        migrations.CreateModel(
            name='Data_Export',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(blank=True, choices=[('csv', 'CSV'), ('excel', 'EXCEL')], default='csv', max_length=150, null=True)),
                ('reference_doctype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
            options={
                'verbose_name_plural': 'Data_Export',
            },
        ),
        migrations.CreateModel(
            name='Communication_Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_name', models.CharField(blank=True, max_length=150, null=True)),
                ('link_title', models.CharField(blank=True, max_length=150, null=True)),
                ('link_doctype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
            options={
                'verbose_name_plural': 'Communication_Link',
            },
        ),
        migrations.CreateModel(
            name='Communication_Docperm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permlevel', models.IntegerField(blank=True, null=True)),
                ('read', models.BooleanField(default=False)),
                ('write', models.BooleanField(default=False)),
                ('create', models.BooleanField(default=False)),
                ('delete', models.BooleanField(default=False)),
                ('submit', models.BooleanField(default=False)),
                ('cancel', models.BooleanField(default=False)),
                ('amend', models.BooleanField(default=False)),
                ('report', models.BooleanField(default=False)),
                ('export', models.BooleanField(default=True)),
                ('Import', models.BooleanField(default=False)),
                ('set_User_permissions', models.BooleanField(default=False)),
                ('share', models.BooleanField(default=False)),
                ('print', models.BooleanField(default=False)),
                ('email', models.BooleanField(default=False)),
                ('parent', models.CharField(blank=True, max_length=150, null=True)),
                ('select', models.BooleanField(default=False)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.role')),
            ],
            options={
                'verbose_name_plural': 'Communication_Docperm',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=150, null=True)),
                ('comment_email', models.CharField(blank=True, max_length=150, null=True)),
                ('subject', models.CharField(blank=True, max_length=150, null=True)),
                ('reference_doctype', models.CharField(blank=True, max_length=150, null=True)),
                ('link_name', models.CharField(blank=True, max_length=150, null=True)),
                ('reference_owner', models.CharField(blank=True, max_length=150, null=True)),
                ('content', models.CharField(blank=True, max_length=150, null=True)),
                ('comment_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('link_doctype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
            ],
            options={
                'verbose_name_plural': 'Comment',
            },
        ),
        migrations.CreateModel(
            name='Activity_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=150, null=True)),
                ('content', models.CharField(blank=True, max_length=150, null=True)),
                ('now', models.DateTimeField(auto_now=True)),
                ('operation', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.CharField(blank=True, max_length=150, null=True)),
                ('reference_doctype', models.CharField(blank=True, max_length=150, null=True)),
                ('reference_name_owner', models.CharField(blank=True, max_length=150, null=True)),
                ('timeline_doctype', models.CharField(blank=True, max_length=150, null=True)),
                ('timeline_name', models.CharField(blank=True, max_length=150, null=True)),
                ('link_name', models.CharField(blank=True, max_length=150, null=True)),
                ('full_name', models.CharField(blank=True, max_length=150, null=True)),
                ('link_doctype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Activity_Log',
            },
        ),
        migrations.CreateModel(
            name='Access_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_form', models.CharField(blank=True, max_length=150, null=True)),
                ('now', models.DateTimeField(auto_now=True)),
                ('reference_document', models.CharField(blank=True, max_length=150, null=True)),
                ('file_type', models.CharField(blank=True, choices=[('csv', 'CSV'), ('excel', 'EXCEL')], default='csv', max_length=150, null=True)),
                ('report_name', models.CharField(blank=True, max_length=150, null=True)),
                ('page', models.CharField(blank=True, max_length=150, null=True)),
                ('log_data_section', models.CharField(blank=True, max_length=150, null=True)),
                ('private_file_section', models.CharField(blank=True, max_length=150, null=True)),
                ('report_information_section', models.CharField(blank=True, max_length=150, null=True)),
                ('raw_information_log_section', models.CharField(blank=True, max_length=150, null=True)),
                ('method', models.CharField(blank=True, max_length=150, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Access_Log_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Access_Log_modified_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Access_Log',
            },
        ),
    ]
